from sys import stdin


def findLargest(arr, nRows, mCols):
    # Your code goes here
    n = nRows
    m = mCols

    max_row_sum = 0
    max_row_index = 0
    row_sum = [sum(x) for x in arr]
    for i in range(len(row_sum)):
        if row_sum[i] > max_row_sum:
            max_row_sum = row_sum[i]
            max_row_index = i

    max_col_sum = 0
    max_col_index = 0
    for j in range(m):
        col_sum = 0
        for ele in arr:
            col_sum += ele[j]
        if col_sum > max_col_sum:
            max_col_sum = col_sum
            max_col_index = j
    if max_col_sum == 0 and max_row_sum == 0:
        print("row", max_row_index, -2147483648)
        exit()
    elif max_col_sum > max_row_sum:
        print("column", max_col_index, max_col_sum)
    else:
        print("row", max_row_index, max_row_sum)


# Taking Input Using Fast I/O
def take2DInput():
    li = stdin.readline().rstrip().split(" ")
    nRows = int(li[0])
    mCols = int(li[1])

    if nRows == 0:
        return list(), 0, 0

    mat = [list(map(int, input().strip().split(" "))) for row in range(nRows)]
    return mat, nRows, mCols


# main
t = int(stdin.readline().rstrip())

while t > 0:
    mat, nRows, mCols = take2DInput()
    findLargest(mat, nRows, mCols)

    t -= 1
